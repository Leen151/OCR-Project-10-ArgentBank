openapi: 3.0.0
info:
  title: ArgentBank API documentation
  description: Contains all available API endpoints in this codebase
  version: "1.0.0"
  termsOfService: "http://swagger.io/terms/"
servers:
  - url: http://localhost:3001/api/v1
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Login"
      responses:
        "200":
          description: Login Successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LoginResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error

  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
      responses:
        "200":
          description: Signup Successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error

  /user/profile:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          schema:
            type: string
      responses:
        "200":
          description: User profile retrieved successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserProfile"
      responses:
        "200":
          description: User profile updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error

  /user/accounts:
    get:
      tags:
        - Account Module
      summary: Permet d'obtenir la liste de tous les comptes bancaires de l'utilisateur.
      security:
        - Bearer: []
      responses:
        "200":
          description: Comptes récupérés avec succès
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountsResponse"
        "401":
          description: Une authentification est nécessaire pour accéder à la ressource
        "404":
          description: Compte non trouvé
        "500":
          description: Erreur interne du serveur

  /account/{accountId}/transactions:
    get:
      tags:
        - Transactions Module
      summary: Permet d'obtenir la liste des transactions (des 30 derniers jours ou d'une période donnée) d'un compte bancaire de l'utilisateur.
      security:
        - Bearer: []
      parameters:
        - name: accountId
          in: path
          description: ID du compte
          required: true
          schema:
            type: integer
        - name: begin
          in: query
          required: false
          description: Date de début de la période de recherche (au format `YYYY-MM-DD`)
          schema:
            type: string
            format: date
        - name: end
          in: query
          required: false
          description: Date de fin de la période de recherche (au format `YYYY-MM-DD`)
          schema:
            type: string
            format: date
      responses:
        "200":
          description: Liste des transactions récupérée avec succès
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/TransactionsResponse"
        "401":
          description: Authentification requise pour accéder à la ressource
        "404":
          description: Transactions non trouvées
        "500":
          description: Erreur interne du serveur

  /transaction/{transactionId}:
    get:
      tags:
        - Transactions Module
      summary: Permet d'obtenir les détails d'une transaction.
      security:
        - Bearer: []
      parameters:
        - in: path
          name: transactionId
          description: ID de la transaction
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Détails de la transaction récupérés avec succès
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TransactionsResponse"
        "401":
          description: Authentification requise pour accéder à la ressource
        "404":
          description: Transaction non trouvée
        "500":
          description: Erreur interne du serveur

    patch:
      tags:
        - Transactions Module
      summary: Permet de modifier la note et/ou la catégorie d'une transaction.
      security:
        - Bearer: []
      parameters:
        - name: transactionId
          in: path
          required: true
          description: ID de la transaction à mettre à jour
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                note:
                  type: string
                  description: Nouvelle note de la transaction
                category:
                  type: string
                  description: Nouvelle catégorie de la transaction
              additionalProperties: false
      responses:
        "200":
          description: Modification réalisée avec succès
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TransactionsResponse"
        "401":
          description: Authentification requise pour accéder à la ressource
        "404":
          description: Transaction non trouvée
        "500":
          description: Erreur interne du serveur

components:
  securitySchemes:
    Bearer:
      type: apiKey
      name: Authorization
      in: header

  schemas:
    User:
      type: object
      properties:
        email:
          type: string
          description: user email
        password:
          type: string
          description: user password
        firstName:
          type: string
          description: user first name
        lastName:
          type: string
          description: user last name

    Login:
      type: object
      properties:
        email:
          type: string
          description: user email
        password:
          type: string
          description: user password

    ApiResponse:
      type: object
      properties:
        status:
          type: integer
        message:
          type: string
        body:
          type: object
          properties:
            id:
              type: string
            email:
              type: string

    LoginResponse:
      type: object
      properties:
        token:
          type: string

    UserProfile:
      type: object
      properties:
        firstName:
          type: string
        lastName:
          type: string

    AccountsResponse:
      type: object
      properties:
        accountID:
          type: string
          description: ID du compte
        accountName:
          type: string
          description: nom du compte
        accountCurrency:
          type: string
          description: devise du compte
        currentBalance:
          type: number
          description: solde du compte courant
          format: double

    TransactionsResponse:
      type: object
      properties:
        transactionId:
          type: integer
          description: ID de la transaction
        transactionType:
          type: string
          description: Type de la transaction
        date:
          type: string
          format: date-time
          description: Date de la transaction
        amount:
          type: number
          description: Montant de la transaction
        balance:
          type: number
          format: double
          description: Solde après la transaction
        category:
          type: string
          description: Catégorie de la transaction
        note:
          type: string
          description: Note de la transaction
